syntax = "proto3";

import "basic_types.proto";
package proto;

// A vector of system configurations.
message SystemConfVec {
  repeated SystemConf data = 1;
}

// A vector of system configuration edges.
message SystemConfEdgeVec {
  repeated SystemConfEdge data = 1;
}

// Request to start generating a set of IRIS regions for a given planning
// context from some set of seed data.
message StartBuildRequest {
  // The request ID.
  string id = 1;
  // Unique target context for which the regions will be generated.
  PlanContext context = 2;
  oneof seed_data {
    // A vector of system configs.
    SystemConfVec sysconf_vec = 3;
    // A vector of system config edges.
    SystemConfEdgeVec sysconf_edge_vec = 4;
    // A flag which will trigger a build from the context's PRM database
    // (CURRENTLY UNIMPLEMENTED).
    bool use_prm = 5;
  }
}

// Response which contains the result of attempting to start computation of a
// solution for the corresponding StartBuildRequest.
message StartBuildResponse {
  string id = 1;
  bool success = 2;
  // msg used to convey extra information to client; usually
  // for explaining cause of error
  string msg = 3;
}

// Request to retrieve the status of a given IRIS region generation job with a
// unique ID.
message ReportBuildStatusRequest {
  string id = 1;
}

// Response which contains the result of retrieving the status of the job with
// the given ID.
message ReportBuildStatusResponse {
  string id = 1;
}

service IrisBuilder {
  // Start a build job with some set of seed data.
  rpc HandleStartBuildRequest(StartBuildRequest) returns (StartBuildResponse) {}
  // Return a reoprt on the status of a build job with the given original
  // request ID.
  rpc HandleReportStatusRequest(ReportBuildStatusRequest)
      returns (ReportBuildStatusResponse) {}
}
